{"ast":null,"code":"import { i as isWindowDefined, a as isFunction, m as mergeObjects, S as SWRConfigContext, d as defaultConfig, s as serialize, b as SWRGlobalState, c as cache, e as isUndefined, f as mergeConfigs } from './config-context-client-BoS53ST9.mjs';\nexport { I as IS_REACT_LEGACY, r as IS_SERVER, O as OBJECT, g as SWRConfig, U as UNDEFINED, k as compare, z as createCacheHelper, q as defaultConfigOptions, o as getTimestamp, y as hasRequestAnimationFrame, h as initCache, n as internalMutate, w as isDocumentDefined, x as isLegacyDeno, B as isPromiseLike, j as mutate, A as noop, p as preset, t as rAF, v as slowConnection, l as stableHash, u as useIsomorphicLayoutEffect } from './config-context-client-BoS53ST9.mjs';\nimport * as revalidateEvents from './events.mjs';\nexport { revalidateEvents };\nimport { INFINITE_PREFIX } from './constants.mjs';\nexport { INFINITE_PREFIX } from './constants.mjs';\nimport React, { useContext } from 'react';\nexport * from './types.mjs';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = () => {\n  if (enableDevtools) {\n    // @ts-expect-error\n    window.__SWR_DEVTOOLS_REACT__ = React;\n  }\n};\nconst normalize = args => {\n  return isFunction(args[1]) ? [args[0], args[1], args[2] || {}] : [args[0], null, (args[1] === null ? args[2] : args[1]) || {}];\n};\nconst useSWRConfig = () => {\n  return mergeObjects(defaultConfig, useContext(SWRConfigContext));\n};\nconst preload = (key_, fetcher) => {\n  const [key, fnArg] = serialize(key_);\n  const [,,, PRELOAD] = SWRGlobalState.get(cache);\n  // Prevent preload to be called multiple times before used.\n  if (PRELOAD[key]) return PRELOAD[key];\n  const req = fetcher(fnArg);\n  PRELOAD[key] = req;\n  return req;\n};\nconst middleware = useSWRNext => (key_, fetcher_, config) => {\n  // fetcher might be a sync function, so this should not be an async function\n  const fetcher = fetcher_ && function () {\n    const [key] = serialize(key_);\n    const [,,, PRELOAD] = SWRGlobalState.get(cache);\n    if (key.startsWith(INFINITE_PREFIX)) {\n      // we want the infinite fetcher to be called.\n      // handling of the PRELOAD cache happens there.\n      return fetcher_(...arguments);\n    }\n    const req = PRELOAD[key];\n    if (isUndefined(req)) return fetcher_(...arguments);\n    delete PRELOAD[key];\n    return req;\n  };\n  return useSWRNext(key_, fetcher, config);\n};\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = hook => {\n  return function useSWRArgs() {\n    // Get the default and inherited configuration.\n    const fallbackConfig = useSWRConfig();\n    // Normalize arguments.\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const [key, fn, _config] = normalize(args);\n    // Merge configurations.\n    const config = mergeConfigs(fallbackConfig, _config);\n    // Apply middleware\n    let next = hook;\n    const {\n      use\n    } = config;\n    const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n    for (let i = middleware.length; i--;) {\n      next = middleware[i](next);\n    }\n    return next(key, fn || config.fetcher || null, config);\n  };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback) => {\n  const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n  keyedRevalidators.push(callback);\n  return () => {\n    const index = keyedRevalidators.indexOf(callback);\n    if (index >= 0) {\n      // O(1): faster than splice\n      keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n      keyedRevalidators.pop();\n    }\n  };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware) => {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const [key, fn, config] = normalize(args);\n    const uses = (config.use || []).concat(middleware);\n    return useSWR(key, fn, {\n      ...config,\n      use: uses\n    });\n  };\n};\nsetupDevTools();\nexport { SWRGlobalState, cache, defaultConfig, isFunction, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, normalize, preload, serialize, subscribeCallback, useSWRConfig, withArgs, withMiddleware };","map":{"version":3,"names":["i","isWindowDefined","a","isFunction","m","mergeObjects","S","SWRConfigContext","d","defaultConfig","s","serialize","b","SWRGlobalState","c","cache","e","isUndefined","f","mergeConfigs","I","IS_REACT_LEGACY","r","IS_SERVER","O","OBJECT","g","SWRConfig","U","UNDEFINED","k","compare","z","createCacheHelper","q","defaultConfigOptions","o","getTimestamp","y","hasRequestAnimationFrame","h","initCache","n","internalMutate","w","isDocumentDefined","x","isLegacyDeno","B","isPromiseLike","j","mutate","A","noop","p","preset","t","rAF","v","slowConnection","l","stableHash","u","useIsomorphicLayoutEffect","revalidateEvents","INFINITE_PREFIX","React","useContext","enableDevtools","window","__SWR_DEVTOOLS_USE__","use","setupDevTools","__SWR_DEVTOOLS_REACT__","normalize","args","useSWRConfig","preload","key_","fetcher","key","fnArg","PRELOAD","get","req","middleware","useSWRNext","fetcher_","config","startsWith","arguments","BUILT_IN_MIDDLEWARE","concat","withArgs","hook","useSWRArgs","fallbackConfig","_len","length","Array","_key","fn","_config","next","subscribeCallback","callbacks","callback","keyedRevalidators","push","index","indexOf","pop","withMiddleware","useSWR","_len2","_key2","uses"],"sources":["D:/Ripple Media Office work/React/wisdomwithin-clerk-new/node_modules/swr/dist/_internal/index.mjs"],"sourcesContent":["import { i as isWindowDefined, a as isFunction, m as mergeObjects, S as SWRConfigContext, d as defaultConfig, s as serialize, b as SWRGlobalState, c as cache, e as isUndefined, f as mergeConfigs } from './config-context-client-BoS53ST9.mjs';\nexport { I as IS_REACT_LEGACY, r as IS_SERVER, O as OBJECT, g as SWRConfig, U as UNDEFINED, k as compare, z as createCacheHelper, q as defaultConfigOptions, o as getTimestamp, y as hasRequestAnimationFrame, h as initCache, n as internalMutate, w as isDocumentDefined, x as isLegacyDeno, B as isPromiseLike, j as mutate, A as noop, p as preset, t as rAF, v as slowConnection, l as stableHash, u as useIsomorphicLayoutEffect } from './config-context-client-BoS53ST9.mjs';\nimport * as revalidateEvents from './events.mjs';\nexport { revalidateEvents };\nimport { INFINITE_PREFIX } from './constants.mjs';\nexport { INFINITE_PREFIX } from './constants.mjs';\nimport React, { useContext } from 'react';\nexport * from './types.mjs';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = React;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return mergeObjects(defaultConfig, useContext(SWRConfigContext));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            if (key.startsWith(INFINITE_PREFIX)) {\n                // we want the infinite fetcher to be called.\n                // handling of the PRELOAD cache happens there.\n                return fetcher_(...args);\n            }\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\nexport { SWRGlobalState, cache, defaultConfig, isFunction, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, normalize, preload, serialize, subscribeCallback, useSWRConfig, withArgs, withMiddleware };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,eAAe,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,YAAY,QAAQ,sCAAsC;AAChP,SAASC,CAAC,IAAIC,eAAe,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,MAAM,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,iBAAiB,EAAEC,CAAC,IAAIC,oBAAoB,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,wBAAwB,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,iBAAiB,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,MAAM,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,MAAM,EAAEC,CAAC,IAAIC,GAAG,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,yBAAyB,QAAQ,sCAAsC;AACpd,OAAO,KAAKC,gBAAgB,MAAM,cAAc;AAChD,SAASA,gBAAgB;AACzB,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASA,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,cAAc,aAAa;;AAE3B;AACA,MAAMC,cAAc,GAAGnE,eAAe,IAAIoE,MAAM,CAACC,oBAAoB;AACrE,MAAMC,GAAG,GAAGH,cAAc,GAAGC,MAAM,CAACC,oBAAoB,GAAG,EAAE;AAC7D,MAAME,aAAa,GAAGA,CAAA,KAAI;EACtB,IAAIJ,cAAc,EAAE;IAChB;IACAC,MAAM,CAACI,sBAAsB,GAAGP,KAAK;EACzC;AACJ,CAAC;AAED,MAAMQ,SAAS,GAAIC,IAAI,IAAG;EACtB,OAAOxE,UAAU,CAACwE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CACzBA,IAAI,CAAC,CAAC,CAAC,EACPA,IAAI,CAAC,CAAC,CAAC,EACPA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAChB,GAAG,CACAA,IAAI,CAAC,CAAC,CAAC,EACP,IAAI,EACJ,CAACA,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAC/C;AACL,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAI;EACrB,OAAOvE,YAAY,CAACI,aAAa,EAAE0D,UAAU,CAAC5D,gBAAgB,CAAC,CAAC;AACpE,CAAC;AAED,MAAMsE,OAAO,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAG;EAC7B,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGtE,SAAS,CAACmE,IAAI,CAAC;EACpC,MAAM,KAAOI,OAAO,CAAC,GAAGrE,cAAc,CAACsE,GAAG,CAACpE,KAAK,CAAC;EACjD;EACA,IAAImE,OAAO,CAACF,GAAG,CAAC,EAAE,OAAOE,OAAO,CAACF,GAAG,CAAC;EACrC,MAAMI,GAAG,GAAGL,OAAO,CAACE,KAAK,CAAC;EAC1BC,OAAO,CAACF,GAAG,CAAC,GAAGI,GAAG;EAClB,OAAOA,GAAG;AACd,CAAC;AACD,MAAMC,UAAU,GAAIC,UAAU,IAAG,CAACR,IAAI,EAAES,QAAQ,EAAEC,MAAM,KAAG;EACnD;EACA,MAAMT,OAAO,GAAGQ,QAAQ,IAAK,YAAW;IACpC,MAAM,CAACP,GAAG,CAAC,GAAGrE,SAAS,CAACmE,IAAI,CAAC;IAC7B,MAAM,KAAOI,OAAO,CAAC,GAAGrE,cAAc,CAACsE,GAAG,CAACpE,KAAK,CAAC;IACjD,IAAIiE,GAAG,CAACS,UAAU,CAACxB,eAAe,CAAC,EAAE;MACjC;MACA;MACA,OAAOsB,QAAQ,CAAC,GAAAG,SAAO,CAAC;IAC5B;IACA,MAAMN,GAAG,GAAGF,OAAO,CAACF,GAAG,CAAC;IACxB,IAAI/D,WAAW,CAACmE,GAAG,CAAC,EAAE,OAAOG,QAAQ,CAAC,GAAAG,SAAO,CAAC;IAC9C,OAAOR,OAAO,CAACF,GAAG,CAAC;IACnB,OAAOI,GAAG;EACd,CAAE;EACF,OAAOE,UAAU,CAACR,IAAI,EAAEC,OAAO,EAAES,MAAM,CAAC;AAC5C,CAAC;AAEL,MAAMG,mBAAmB,GAAGpB,GAAG,CAACqB,MAAM,CAACP,UAAU,CAAC;;AAElD;AACA;AACA,MAAMQ,QAAQ,GAAIC,IAAI,IAAG;EACrB,OAAO,SAASC,UAAUA,CAAA,EAAU;IAChC;IACA,MAAMC,cAAc,GAAGpB,YAAY,CAAC,CAAC;IACrC;IAAA,SAAAqB,IAAA,GAAAP,SAAA,CAAAQ,MAAA,EAH0BvB,IAAI,OAAAwB,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJzB,IAAI,CAAAyB,IAAA,IAAAV,SAAA,CAAAU,IAAA;IAAA;IAI9B,MAAM,CAACpB,GAAG,EAAEqB,EAAE,EAAEC,OAAO,CAAC,GAAG5B,SAAS,CAACC,IAAI,CAAC;IAC1C;IACA,MAAMa,MAAM,GAAGrE,YAAY,CAAC6E,cAAc,EAAEM,OAAO,CAAC;IACpD;IACA,IAAIC,IAAI,GAAGT,IAAI;IACf,MAAM;MAAEvB;IAAI,CAAC,GAAGiB,MAAM;IACtB,MAAMH,UAAU,GAAG,CAACd,GAAG,IAAI,EAAE,EAAEqB,MAAM,CAACD,mBAAmB,CAAC;IAC1D,KAAI,IAAI3F,CAAC,GAAGqF,UAAU,CAACa,MAAM,EAAElG,CAAC,EAAE,GAAE;MAChCuG,IAAI,GAAGlB,UAAU,CAACrF,CAAC,CAAC,CAACuG,IAAI,CAAC;IAC9B;IACA,OAAOA,IAAI,CAACvB,GAAG,EAAEqB,EAAE,IAAIb,MAAM,CAACT,OAAO,IAAI,IAAI,EAAES,MAAM,CAAC;EAC1D,CAAC;AACL,CAAC;;AAED;AACA;AACA,MAAMgB,iBAAiB,GAAGA,CAACxB,GAAG,EAAEyB,SAAS,EAAEC,QAAQ,KAAG;EAClD,MAAMC,iBAAiB,GAAGF,SAAS,CAACzB,GAAG,CAAC,KAAKyB,SAAS,CAACzB,GAAG,CAAC,GAAG,EAAE,CAAC;EACjE2B,iBAAiB,CAACC,IAAI,CAACF,QAAQ,CAAC;EAChC,OAAO,MAAI;IACP,MAAMG,KAAK,GAAGF,iBAAiB,CAACG,OAAO,CAACJ,QAAQ,CAAC;IACjD,IAAIG,KAAK,IAAI,CAAC,EAAE;MACZ;MACAF,iBAAiB,CAACE,KAAK,CAAC,GAAGF,iBAAiB,CAACA,iBAAiB,CAACT,MAAM,GAAG,CAAC,CAAC;MAC1ES,iBAAiB,CAACI,GAAG,CAAC,CAAC;IAC3B;EACJ,CAAC;AACL,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAACC,MAAM,EAAE5B,UAAU,KAAG;EACzC,OAAO,YAAW;IAAA,SAAA6B,KAAA,GAAAxB,SAAA,CAAAQ,MAAA,EAAPvB,IAAI,OAAAwB,KAAA,CAAAe,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJxC,IAAI,CAAAwC,KAAA,IAAAzB,SAAA,CAAAyB,KAAA;IAAA;IACX,MAAM,CAACnC,GAAG,EAAEqB,EAAE,EAAEb,MAAM,CAAC,GAAGd,SAAS,CAACC,IAAI,CAAC;IACzC,MAAMyC,IAAI,GAAG,CAAC5B,MAAM,CAACjB,GAAG,IAAI,EAAE,EAAEqB,MAAM,CAACP,UAAU,CAAC;IAClD,OAAO4B,MAAM,CAACjC,GAAG,EAAEqB,EAAE,EAAE;MACnB,GAAGb,MAAM;MACTjB,GAAG,EAAE6C;IACT,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED5C,aAAa,CAAC,CAAC;AAEf,SAAS3D,cAAc,EAAEE,KAAK,EAAEN,aAAa,EAAEN,UAAU,EAAEc,WAAW,EAAEhB,eAAe,EAAEkB,YAAY,EAAEd,YAAY,EAAEqE,SAAS,EAAEG,OAAO,EAAElE,SAAS,EAAE6F,iBAAiB,EAAE5B,YAAY,EAAEiB,QAAQ,EAAEmB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}